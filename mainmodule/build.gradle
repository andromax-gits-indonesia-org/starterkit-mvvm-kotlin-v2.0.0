apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: '../deps.gradle'

android {
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    } else {
        versionProps['VERSION_CODE'] = '0'
    }

    def code = versionProps['VERSION_CODE'].toInteger() + 1.toInteger()

    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    compileSdkVersion configVersion.sdk
    defaultConfig {
        applicationId "id.gits.gitsmvvmkotlin"
        minSdkVersion configVersion.minSdk
        targetSdkVersion configVersion.sdk
        versionCode configVersion.code
        versionName configVersion.name
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resConfigs "en", "id"
        vectorDrawables.useSupportLibrary = true

        // Export local db schema into json file
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    signingConfigs {
        released {
            storeFile file("${rootDir}/generalkey.jks")
            storePassword "12345678"
            keyAlias "12345678"
            keyPassword "12345678"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    androidExtensions {
        experimental = true
    }


    dynamicFeatures = [":settings"]
}

dependencies {
    api project(':apputils')

}
